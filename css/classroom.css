/* classroom.css - 翻牌遊戲樣式 */

.classroom-game {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
    text-align: center;
}

.game-info {
    display: flex;
    justify-content: space-around;
    background: rgba(255, 255, 255, 0.9);
    padding: 15px;
    border-radius: var(--border-radius);
    margin-bottom: 30px;
    box-shadow: var(--shadow-light);
    flex-wrap: wrap;
    gap: 10px;
}

.game-info span {
    font-weight: bold;
    color: var(--school-blue);
    font-size: 18px;
    padding: 5px 10px;
    background: var(--school-light-blue);
    border-radius: var(--border-radius);
}

.card-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 15px;
    max-width: 600px;
    margin: 0 auto 30px;
    padding: 20px;
    background: rgba(255, 255, 255, 0.8);
    border-radius: var(--border-radius-large);
    box-shadow: var(--shadow-medium);
}

.memory-card {
    aspect-ratio: 1;
    perspective: 1000px;
    cursor: pointer;
    position: relative;
}

.memory-card.flipped .card-front {
    transform: rotateY(-180deg);
}

.memory-card.flipped .card-back {
    transform: rotateY(0);
}

.memory-card.matched {
    animation: matchPulse 0.6s ease;
}

.memory-card.matched .card-front,
.memory-card.matched .card-back {
    background: var(--success-color);
    border-color: var(--school-green);
}

.card-front,
.card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--border-radius);
    transition: transform 0.6s ease;
    box-shadow: var(--shadow-light);
    border: 3px solid var(--primary-color);
    font-size: 2em;
    font-weight: bold;
}

.card-front {
    background: var(--primary-color);
    color: white;
    transform: rotateY(0);
}

.card-back {
    background: white;
    color: var(--school-blue);
    transform: rotateY(180deg);
}

.memory-card:hover:not(.flipped):not(.matched) .card-front {
    background: var(--school-blue);
    transform: scale(1.05);
}

.game-controls {
    display: flex;
    gap: 20px;
    justify-content: center;
    flex-wrap: wrap;
}

.game-controls button {
    padding: 12px 24px;
    font-size: 16px;
    min-width: 140px;
}

#resetGame {
    background: var(--warning-color);
}

#resetGame:hover {
    background: #f57c00;
}

/* 完成動畫 */
@keyframes matchPulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

/* 計時器特效 */
#timer {
    position: relative;
}

#timer.warning {
    color: var(--error-color);
    animation: timerBlink 1s infinite;
}

@keyframes timerBlink {
    0%, 50% {
        opacity: 1;
    }
    51%, 100% {
        opacity: 0.5;
    }
}

/* 分數特效 */
.score-popup {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--success-color);
    color: white;
    padding: 10px 20px;
    border-radius: 20px;
    font-weight: bold;
    animation: scoreFloat 1s ease-out forwards;
    pointer-events: none;
    z-index: 100;
}

@keyframes scoreFloat {
    0% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(0.8);
    }
    50% {
        transform: translate(-50%, -70%) scale(1.2);
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -90%) scale(1);
    }
}

/* 遊戲完成效果 */
.game-complete {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    animation: fadeIn 0.5s ease;
}

.complete-popup {
    background: white;
    padding: 40px;
    border-radius: var(--border-radius-large);
    text-align: center;
    box-shadow: var(--shadow-heavy);
    max-width: 400px;
    animation: popIn 0.6s ease;
}

.complete-popup h2 {
    color: var(--success-color);
    margin-bottom: 20px;
}

.complete-stats {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin: 20px 0;
}

.stat-item {
    padding: 15px;
    background: var(--school-light-blue);
    border-radius: var(--border-radius);
}

.stat-value {
    font-size: 1.5em;
    font-weight: bold;
    color: var(--primary-color);
}

@keyframes popIn {
    0% {
        opacity: 0;
        transform: scale(0.8) translateY(-20px);
    }
    100% {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

/* 響應式設計 */
@media (max-width: 768px) {
    .card-grid {
        gap: 10px;
        padding: 15px;
        max-width: 400px;
    }
    
    .card-front,
    .card-back {
        font-size: 1.5em;
        border-width: 2px;
    }
    
    .game-info {
        flex-direction: column;
        gap: 5px;
    }
    
    .game-info span {
        font-size: 16px;
    }
    
    .complete-popup {
        padding: 30px 20px;
        margin: 20px;
    }
    
    .complete-stats {
        grid-template-columns: 1fr;
        gap: 10px;
    }
}

@media (max-width: 480px) {
    .card-grid {
        gap: 8px;
        padding: 10px;
    }
    
    .card-front,
    .card-back {
        font-size: 1.2em;
    }
    
    .game-controls {
        gap: 10px;
    }
    
    .game-controls button {
        padding: 10px 16px;
        font-size: 14px;
        min-width: 120px;
    }
}

/* 無障礙改善 */
.memory-card:focus {
    outline: 3px solid var(--school-gold);
    outline-offset: 2px;
}

.memory-card[aria-label] {
    position: relative;
}

/* 色盲友善設計 */
@media (prefers-contrast: high) {
    .card-front {
        background: #000080;
        border-color: #000000;
    }
    
    .card-back {
        background: #ffffff;
        border-color: #000000;
        color: #000080;
    }
    
    .memory-card.matched .card-front,
    .memory-card.matched .card-back {
        background: #006600;
        border-color: #000000;
    }
}